@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using mixi.Components.Pages
@using mixi.Components.UI
@using mixi.Modules.Enums
@using mixi.Modules.UI

@inject PdfPopup PdfPopup
@inject MenuPopup MenuPopup
@inject ProtectedSessionStorage Storage

@rendermode InteractiveServer

<div class="h-9/10 w-9/10 bg-black m-auto mt-0 flex-col flex  text-center items-center content-center place-content-center rounded-lg drop-shadow-md">
    <div class="data-box">
        <div class="logButton">
            <div class="logButton-content" @onclick="() => ShowPopup(PdfMenuChoice.Wh4E)">
                WARHAMMER FANTASY 4E
            </div>
        </div>
    </div>
    <div class="data-box">
        <div class="logButton">
            <div class="closeButton-content " @onclick="ClosePopup">
                CLOSE
            </div>
        </div>
        </div>
</div>
<PdfPopupContainer @ref="_pdfPopup"></PdfPopupContainer>

@code {
    PdfPopupContainer _pdfPopup = null!;
    ILogger _logger;
    
    private Task ShowPopup(PdfMenuChoice pdfMenuChoice)
    {
        switch (pdfMenuChoice)
        {
            case PdfMenuChoice.Wh4E:
                PdfPopup.PdfName = "WHF4E.pdf";
                _pdfPopup.ShowComponent<PdfViewer>();
                break;
            default:
                _logger.LogInformation("Menu choice error");
                break; 
        }
        return Task.CompletedTask;
    }
    
    private async void ClosePopup()
    {
        MenuPopup.IsVisible = false;
        await Storage.SetAsync("MenuIsVisible", false);
    }
}