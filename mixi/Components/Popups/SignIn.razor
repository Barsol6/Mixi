@using mixi.Modules.Account
@using mixi.Modules.UI

@inject SignUp SignUp
@inject SignUpPopup SignUpPop



@rendermode InteractiveServer

<div class="h-full w-full bg-black m-auto mt-0 flex-col flex text-nowrap text-center items-center content-center place-content-center rounded-lg bg-black">
        <div class="data-box">
            <input type="text" @bind="SignUpPop.Username" onkeyup="@Enter" required="required"/>
            <label> USERNAME </label>
            <br/>
        </div>
        <div class="data-box">
            <input type="text" @bind="SignUpPop.Password" onkeyup="@Enter" required="required"/>
            <label> PASSWORD </label>
            <br/>
        </div>
        <div class="data-box">
            <input type="text" @bind="SignUpPop.PasswordRepeat" onkeyup="@Enter" required="required"/>
            <label> REPEAT PASSWORD </label>
            <br/>
        </div> 
        <div class="data-box">
            <InputSelect @bind-Value="SignUpPop.UserType">
                <option checked="@(SignUpPop.UserType == "GameMaster")">
                    Game Master
                </option>   
                <option checked="@(SignUpPop.UserType == "Player")">
                    Player
                </option>
            </InputSelect>
            <label> USER TYPE </label>
            <br/>
        </div>
            <div class="data-box" @onclick="HandleUserSignUp">
                <div class="logButton">
                    <div class="logButton-content">
                        SIGN UP  
                    </div>
                </div>
            </div>
</div>

@code {

    protected override void OnInitialized()
    {
        SignUpPop.Password = String.Empty;
        SignUpPop.Username = String.Empty;
        base.OnInitialized();
    }

    private async Task Enter(KeyboardEventArgs e)
    {
        if (e.Code is "Enter" or "NumpadEnter" )
        {
            await HandleUserSignUp();   
        }
    }

    private async Task HandleUserSignUp()
    {
        if (SignUpPop.Username != String.Empty && SignUpPop.Password != String.Empty && SignUpPop.PasswordRepeat != String.Empty)
        {
            if (SignUpPop.Password != SignUpPop.PasswordRepeat)
            {
                return;
            }
            await SignUp.CreateAccount();
            StateHasChanged();
        }
    }
    



}