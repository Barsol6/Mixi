@page "/login"
@page "/"

@rendermode InteractiveServer


@using System.Collections.ObjectModel
@using Microsoft.AspNetCore.Mvc
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Mvc.RazorPages
@using Components.Pages
@using mixi.Components.Layout
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Microsoft.AspNetCore.Identity
@using mixi.Modules.Database
@using mixi.Modules.Users
@using mixi.Modules.Hashers

@layout LoginLayout
@inject ProtectedSessionStorage ProtectedSessionStore
@inject NavigationManager NavigationManager
@inject IUserRepository UsersRepository
@inject PasswordHash PassHash

<div class="container">
    
    <div class="title">
        <div class="titleImg">
            <img class="titleImg"   src="assets/title.png"/>
        </div>
    </div>
    
    <div class="loginBox">
        <div class="login">
            <div class="data-box">
                <input type="text" @bind="_username" onkeyup="@Enter" required="required"/>
                <label> LOGIN </label>
            </div>  
            <div class="data-box">
                <input type="text" @bind="_password" onkeyup="@Enter" required="required"/>
                <label> PASSWORD </label>
            </div>   
            <div class="data-box">
                <div @onclick="HandleUserLogin" class="loginButton">
                    <div class="loginButton-content">LOG IN</div>
                </div>
            </div>   
        </div>
    </div>

</div> 

@code {
    private User _user = new();
    private string _username = String.Empty;
    private string _password = String.Empty;
    private string _hashedPassword = String.Empty;
    private bool _checkPassword = false;
    
    private async Task Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter"|| e.Code == "NumpadEnter" )
        {
            await HandleUserLogin();
        }
    }

    private async Task HandleUserLogin()
    {
        if (_username != String.Empty && _password != String.Empty)
        {
            _hashedPassword = PassHash.HashPasswords(_password, _username);
            await ProtectedSessionStore.SetAsync("username", _username);
            await ProtectedSessionStore.SetAsync("password", _hashedPassword);

            _checkPassword = await PassHash.CheckPassword(_password, _username);

            Console.Out.Write(_checkPassword);
            if (_checkPassword == true)
            {
                NavigationManager.NavigateTo("/home");
            }

        }
    }
}