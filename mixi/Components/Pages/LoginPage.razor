@page "/login"
@page "/"

@rendermode InteractiveServer


@using mixi.Components.Layout
@using mixi.Components.UI
@using mixi.Modules.Enums
@using mixi.Modules.Users
@using mixi.Modules.Account
@using mixi.Components.Popups
@using mixi.Modules.UI


@layout LoginLayout
@inject NavigationManager NavigationManager
@inject PasswordHash PassHash
@inject SignUpPopup SignUpPop


<div class="container">
    
    <div class="title">
       MIXI
    </div>
    
    <div class="loginBox">
        <div class="login">
            <div class="data-box">
                <input type="text" @bind="SignUpPop.Username" onkeyup="@Enter" required="required"/>
                <label> LOGIN </label>
            </div>  
            <div class="data-box">
                <input type="text" @bind="SignUpPop.Password" onkeyup="@Enter" required="required"/>
                <label> PASSWORD </label>
            </div>   
            <PopupContainer @ref="_popup"></PopupContainer>
            <div class="data-box">
                <div @onclick="HandleUserLogin" class="loginButton">
                    <div class="loginButton-content">LOG IN</div>
                </div>
            </div>   
        </div>
    </div>

</div> 

@code {
    private User _user = new();
    private LoginStatus _loginStatus; 


    private PopupContainer _popup = null!;

    protected override void OnInitialized()
    {
        this.SignUpPop.IsVisibleChange += () => InvokeAsync(StateHasChanged);
        this.SignUpPop.IsVisibleChange += () =>
        {
            SignUpPop.Password = String.Empty;
            SignUpPop.Username = String.Empty;
            SignUpPop.PasswordRepeat = String.Empty;
        };
        base.OnInitializedAsync();
    }


    private async Task Enter(KeyboardEventArgs e)
    {
        if (e.Code is "Enter" or "NumpadEnter" )
        {
            await HandleUserLogin();
        }
    }

    private async Task HandleUserLogin()
    {
        if (SignUpPop.Username != String.Empty && SignUpPop.Password != String.Empty)
        {
            
            _loginStatus = await PassHash.CheckPassword(SignUpPop.Password, SignUpPop.Username);
            Console.Out.Write(_loginStatus);
            
            if (_loginStatus == LoginStatus.Success)
            {
                NavigationManager.NavigateTo("/home");
            }
            else if(_loginStatus == LoginStatus.NoAccount)
            {
                SignUpPop.Password = String.Empty;
                SignUpPop.Username = String.Empty;
                SignUpPop.PasswordRepeat = String.Empty;
                _popup.ShowComponent<SignIn>();
            }
            
        }
    }
    
    public void Dispose()
    {
        this.SignUpPop.IsVisibleChange -= StateHasChanged;
    }
    
}