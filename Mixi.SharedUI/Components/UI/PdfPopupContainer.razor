@using Mixi.Shared.Models.UI


@inject MenuPopup MenuPopup
@inject PdfPopup PdfPopup
@inject SignUpPopup Signup
@implements IDisposable


<div class="@(PdfPopup.IsVisible ? "popup" : "hidden")">
    @if (ComponentType is not null)
    {
        <DynamicComponent Type="@ComponentType" Parameters="@Parameters" @ref="_component"/>
    }
</div>
    


@code {

    private  DynamicComponent? _component = null;
    private Type? ComponentType { get; set; }
    private IDictionary<string, object>? Parameters { get; set; }
    
    protected override void OnInitialized()
    {
        this.PdfPopup.IsVisibleChange += () => InvokeAsync(StateHasChanged);
        base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (Signup.IsLogged is false)
        {
            PdfPopup.IsVisible = false;
            Signup.IsLogged = false;
            StateHasChanged();
        }
    }

    public async void ShowComponent<T>(IDictionary<string, object>? parameters = null)
    {   
        ComponentType = typeof(T);
        Parameters = parameters;
        PdfPopup.IsVisible = true;
        Signup.IsLogged = true;
        MenuPopup.IsVisible = false;
        
        StateHasChanged();
    }   
    


    public void Dispose()
    {
        this.PdfPopup.IsVisibleChange -= StateHasChanged;
    }




}