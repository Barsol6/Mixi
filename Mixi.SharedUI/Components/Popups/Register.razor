@using System.Net
@using Mixi.Shared.Models.Account


@inject HttpClient Http
@inject Account Account



<div class="signInPanel">
    <div class="title">
           <div>@_loginStatement</div>
    </div>
    <div class="data-box">
        <input type="text" @bind="Account.Username" @onkeyup="Enter" required="required"/>
        <label> USERNAME </label>
        <br/>
    </div>
    <div class="data-box">
        <input type="password" @bind="Account.Password" @onkeyup="Enter" required="required"/>
        <label> PASSWORD </label>
        <br/>
    </div>
    <div class="data-box">
        <input type="password" @bind="Account.PasswordRepeat" @onkeyup="Enter" required="required"/>
        <label> REPEAT PASSWORD </label>
        <br/>
    </div>
    <div class="data-box">
        <InputSelect @bind-Value="Account.UserType">
            <option checked="@(Account.UserType == "GameMaster")">
                Game Master
            </option>
            <option checked="@(Account.UserType == "Player")">
                Player
            </option>
        </InputSelect>
        <label> USER TYPE </label>
        <br/>
    </div>
    <div class="data-box" @onclick="HandleUserSignUp">
        <div class="logButton">
            <div class="logButton-content">
                SIGN UP
            </div>
        </div>
    </div>
</div>

@code {
    private string _loginStatement = "FILL FORM";   
    
    protected override void OnInitialized()
    {
        Account.Password = String.Empty;
        Account.Username = String.Empty;
        base.OnInitialized();
    }

    private async Task Enter(KeyboardEventArgs e)
    {
        if (e.Code is "Enter" or "NumpadEnter" )
        {
            await HandleUserSignUp();   
        }
    }

    private async Task HandleUserSignUp()
    {
        if (Account.Username != String.Empty && Account.Password != String.Empty && Account.PasswordRepeat != String.Empty)
        {
            if (Account.Password != Account.PasswordRepeat)
            {
                return;
            }
            var exists = await Http.PostAsJsonAsync("api/user/register", Account);
            if (exists.StatusCode == HttpStatusCode.Conflict)
            {
                _loginStatement = "USERNAME ALREADY USED";
            }
            else if (exists.IsSuccessStatusCode)
            {
                _loginStatement = "SUCCES";
            }
            StateHasChanged();
        }
    }
    



}